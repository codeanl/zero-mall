// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: sms.proto

package sms

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Sms_SaveOrUpdateHomeAdvertise_FullMethodName  = "/sms.Sms/SaveOrUpdateHomeAdvertise"
	Sms_HomeAdvertiseList_FullMethodName          = "/sms.Sms/HomeAdvertiseList"
	Sms_HomeAdvertiseDelete_FullMethodName        = "/sms.Sms/HomeAdvertiseDelete"
	Sms_SaveOrUpdateCoupon_FullMethodName         = "/sms.Sms/SaveOrUpdateCoupon"
	Sms_CouponDelete_FullMethodName               = "/sms.Sms/CouponDelete"
	Sms_CouponList_FullMethodName                 = "/sms.Sms/CouponList"
	Sms_SaveOrUpdateSubject_FullMethodName        = "/sms.Sms/SaveOrUpdateSubject"
	Sms_SubjectDelete_FullMethodName              = "/sms.Sms/SubjectDelete"
	Sms_SubjectList_FullMethodName                = "/sms.Sms/SubjectList"
	Sms_SaveOrUpdateSubjectProduct_FullMethodName = "/sms.Sms/SaveOrUpdateSubjectProduct"
	Sms_SubjectProductDelete_FullMethodName       = "/sms.Sms/SubjectProductDelete"
	Sms_SubjectProductList_FullMethodName         = "/sms.Sms/SubjectProductList"
)

// SmsClient is the client API for Sms service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SmsClient interface {
	// 添加｜｜更新广告
	SaveOrUpdateHomeAdvertise(ctx context.Context, in *SaveOrUpdateHomeAdvertiseReq, opts ...grpc.CallOption) (*SaveOrUpdateHomeAdvertiseResp, error)
	// 广告列表
	HomeAdvertiseList(ctx context.Context, in *HomeAdvertiseListReq, opts ...grpc.CallOption) (*HomeAdvertiseListResp, error)
	// 删除广告
	HomeAdvertiseDelete(ctx context.Context, in *HomeAdvertiseDeleteReq, opts ...grpc.CallOption) (*HomeAdvertiseDeleteResp, error)
	// 添加｜｜更新优惠券
	SaveOrUpdateCoupon(ctx context.Context, in *SaveOrUpdateCouponReq, opts ...grpc.CallOption) (*SaveOrUpdateCouponResp, error)
	// 删除优惠券
	CouponDelete(ctx context.Context, in *CouponDeleteReq, opts ...grpc.CallOption) (*CouponDeleteResp, error)
	// 优惠券列表
	CouponList(ctx context.Context, in *CouponListReq, opts ...grpc.CallOption) (*CouponListResp, error)
	// SaveOrUpdateSubject 添加｜｜更新专题
	SaveOrUpdateSubject(ctx context.Context, in *SaveOrUpdateSubjectReq, opts ...grpc.CallOption) (*SaveOrUpdateSubjectResp, error)
	// SubjectDelete 删除专题
	SubjectDelete(ctx context.Context, in *SubjectDeleteAddReq, opts ...grpc.CallOption) (*SubjectDeleteResp, error)
	// SubjectList 专题列表
	SubjectList(ctx context.Context, in *SubjectListReq, opts ...grpc.CallOption) (*SubjectListResp, error)
	// SaveOrUpdateSubjectProduct 添加｜｜更新专题商品
	SaveOrUpdateSubjectProduct(ctx context.Context, in *SaveOrUpdateSubjectProductReq, opts ...grpc.CallOption) (*SaveOrUpdateSubjectProductResp, error)
	// 删除专题商品
	SubjectProductDelete(ctx context.Context, in *SubjectProductDeleteAddReq, opts ...grpc.CallOption) (*SubjectProductDeleteResp, error)
	// 专题列表商品
	SubjectProductList(ctx context.Context, in *SubjectProductListReq, opts ...grpc.CallOption) (*SubjectProductListResp, error)
}

type smsClient struct {
	cc grpc.ClientConnInterface
}

func NewSmsClient(cc grpc.ClientConnInterface) SmsClient {
	return &smsClient{cc}
}

func (c *smsClient) SaveOrUpdateHomeAdvertise(ctx context.Context, in *SaveOrUpdateHomeAdvertiseReq, opts ...grpc.CallOption) (*SaveOrUpdateHomeAdvertiseResp, error) {
	out := new(SaveOrUpdateHomeAdvertiseResp)
	err := c.cc.Invoke(ctx, Sms_SaveOrUpdateHomeAdvertise_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) HomeAdvertiseList(ctx context.Context, in *HomeAdvertiseListReq, opts ...grpc.CallOption) (*HomeAdvertiseListResp, error) {
	out := new(HomeAdvertiseListResp)
	err := c.cc.Invoke(ctx, Sms_HomeAdvertiseList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) HomeAdvertiseDelete(ctx context.Context, in *HomeAdvertiseDeleteReq, opts ...grpc.CallOption) (*HomeAdvertiseDeleteResp, error) {
	out := new(HomeAdvertiseDeleteResp)
	err := c.cc.Invoke(ctx, Sms_HomeAdvertiseDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) SaveOrUpdateCoupon(ctx context.Context, in *SaveOrUpdateCouponReq, opts ...grpc.CallOption) (*SaveOrUpdateCouponResp, error) {
	out := new(SaveOrUpdateCouponResp)
	err := c.cc.Invoke(ctx, Sms_SaveOrUpdateCoupon_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) CouponDelete(ctx context.Context, in *CouponDeleteReq, opts ...grpc.CallOption) (*CouponDeleteResp, error) {
	out := new(CouponDeleteResp)
	err := c.cc.Invoke(ctx, Sms_CouponDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) CouponList(ctx context.Context, in *CouponListReq, opts ...grpc.CallOption) (*CouponListResp, error) {
	out := new(CouponListResp)
	err := c.cc.Invoke(ctx, Sms_CouponList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) SaveOrUpdateSubject(ctx context.Context, in *SaveOrUpdateSubjectReq, opts ...grpc.CallOption) (*SaveOrUpdateSubjectResp, error) {
	out := new(SaveOrUpdateSubjectResp)
	err := c.cc.Invoke(ctx, Sms_SaveOrUpdateSubject_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) SubjectDelete(ctx context.Context, in *SubjectDeleteAddReq, opts ...grpc.CallOption) (*SubjectDeleteResp, error) {
	out := new(SubjectDeleteResp)
	err := c.cc.Invoke(ctx, Sms_SubjectDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) SubjectList(ctx context.Context, in *SubjectListReq, opts ...grpc.CallOption) (*SubjectListResp, error) {
	out := new(SubjectListResp)
	err := c.cc.Invoke(ctx, Sms_SubjectList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) SaveOrUpdateSubjectProduct(ctx context.Context, in *SaveOrUpdateSubjectProductReq, opts ...grpc.CallOption) (*SaveOrUpdateSubjectProductResp, error) {
	out := new(SaveOrUpdateSubjectProductResp)
	err := c.cc.Invoke(ctx, Sms_SaveOrUpdateSubjectProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) SubjectProductDelete(ctx context.Context, in *SubjectProductDeleteAddReq, opts ...grpc.CallOption) (*SubjectProductDeleteResp, error) {
	out := new(SubjectProductDeleteResp)
	err := c.cc.Invoke(ctx, Sms_SubjectProductDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *smsClient) SubjectProductList(ctx context.Context, in *SubjectProductListReq, opts ...grpc.CallOption) (*SubjectProductListResp, error) {
	out := new(SubjectProductListResp)
	err := c.cc.Invoke(ctx, Sms_SubjectProductList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SmsServer is the server API for Sms service.
// All implementations must embed UnimplementedSmsServer
// for forward compatibility
type SmsServer interface {
	// 添加｜｜更新广告
	SaveOrUpdateHomeAdvertise(context.Context, *SaveOrUpdateHomeAdvertiseReq) (*SaveOrUpdateHomeAdvertiseResp, error)
	// 广告列表
	HomeAdvertiseList(context.Context, *HomeAdvertiseListReq) (*HomeAdvertiseListResp, error)
	// 删除广告
	HomeAdvertiseDelete(context.Context, *HomeAdvertiseDeleteReq) (*HomeAdvertiseDeleteResp, error)
	// 添加｜｜更新优惠券
	SaveOrUpdateCoupon(context.Context, *SaveOrUpdateCouponReq) (*SaveOrUpdateCouponResp, error)
	// 删除优惠券
	CouponDelete(context.Context, *CouponDeleteReq) (*CouponDeleteResp, error)
	// 优惠券列表
	CouponList(context.Context, *CouponListReq) (*CouponListResp, error)
	// SaveOrUpdateSubject 添加｜｜更新专题
	SaveOrUpdateSubject(context.Context, *SaveOrUpdateSubjectReq) (*SaveOrUpdateSubjectResp, error)
	// SubjectDelete 删除专题
	SubjectDelete(context.Context, *SubjectDeleteAddReq) (*SubjectDeleteResp, error)
	// SubjectList 专题列表
	SubjectList(context.Context, *SubjectListReq) (*SubjectListResp, error)
	// SaveOrUpdateSubjectProduct 添加｜｜更新专题商品
	SaveOrUpdateSubjectProduct(context.Context, *SaveOrUpdateSubjectProductReq) (*SaveOrUpdateSubjectProductResp, error)
	// 删除专题商品
	SubjectProductDelete(context.Context, *SubjectProductDeleteAddReq) (*SubjectProductDeleteResp, error)
	// 专题列表商品
	SubjectProductList(context.Context, *SubjectProductListReq) (*SubjectProductListResp, error)
	mustEmbedUnimplementedSmsServer()
}

// UnimplementedSmsServer must be embedded to have forward compatible implementations.
type UnimplementedSmsServer struct {
}

func (UnimplementedSmsServer) SaveOrUpdateHomeAdvertise(context.Context, *SaveOrUpdateHomeAdvertiseReq) (*SaveOrUpdateHomeAdvertiseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveOrUpdateHomeAdvertise not implemented")
}
func (UnimplementedSmsServer) HomeAdvertiseList(context.Context, *HomeAdvertiseListReq) (*HomeAdvertiseListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HomeAdvertiseList not implemented")
}
func (UnimplementedSmsServer) HomeAdvertiseDelete(context.Context, *HomeAdvertiseDeleteReq) (*HomeAdvertiseDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HomeAdvertiseDelete not implemented")
}
func (UnimplementedSmsServer) SaveOrUpdateCoupon(context.Context, *SaveOrUpdateCouponReq) (*SaveOrUpdateCouponResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveOrUpdateCoupon not implemented")
}
func (UnimplementedSmsServer) CouponDelete(context.Context, *CouponDeleteReq) (*CouponDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouponDelete not implemented")
}
func (UnimplementedSmsServer) CouponList(context.Context, *CouponListReq) (*CouponListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouponList not implemented")
}
func (UnimplementedSmsServer) SaveOrUpdateSubject(context.Context, *SaveOrUpdateSubjectReq) (*SaveOrUpdateSubjectResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveOrUpdateSubject not implemented")
}
func (UnimplementedSmsServer) SubjectDelete(context.Context, *SubjectDeleteAddReq) (*SubjectDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubjectDelete not implemented")
}
func (UnimplementedSmsServer) SubjectList(context.Context, *SubjectListReq) (*SubjectListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubjectList not implemented")
}
func (UnimplementedSmsServer) SaveOrUpdateSubjectProduct(context.Context, *SaveOrUpdateSubjectProductReq) (*SaveOrUpdateSubjectProductResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveOrUpdateSubjectProduct not implemented")
}
func (UnimplementedSmsServer) SubjectProductDelete(context.Context, *SubjectProductDeleteAddReq) (*SubjectProductDeleteResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubjectProductDelete not implemented")
}
func (UnimplementedSmsServer) SubjectProductList(context.Context, *SubjectProductListReq) (*SubjectProductListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubjectProductList not implemented")
}
func (UnimplementedSmsServer) mustEmbedUnimplementedSmsServer() {}

// UnsafeSmsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SmsServer will
// result in compilation errors.
type UnsafeSmsServer interface {
	mustEmbedUnimplementedSmsServer()
}

func RegisterSmsServer(s grpc.ServiceRegistrar, srv SmsServer) {
	s.RegisterService(&Sms_ServiceDesc, srv)
}

func _Sms_SaveOrUpdateHomeAdvertise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrUpdateHomeAdvertiseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SaveOrUpdateHomeAdvertise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SaveOrUpdateHomeAdvertise_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SaveOrUpdateHomeAdvertise(ctx, req.(*SaveOrUpdateHomeAdvertiseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_HomeAdvertiseList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HomeAdvertiseListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).HomeAdvertiseList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_HomeAdvertiseList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).HomeAdvertiseList(ctx, req.(*HomeAdvertiseListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_HomeAdvertiseDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HomeAdvertiseDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).HomeAdvertiseDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_HomeAdvertiseDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).HomeAdvertiseDelete(ctx, req.(*HomeAdvertiseDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_SaveOrUpdateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrUpdateCouponReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SaveOrUpdateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SaveOrUpdateCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SaveOrUpdateCoupon(ctx, req.(*SaveOrUpdateCouponReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_CouponDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).CouponDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_CouponDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).CouponDelete(ctx, req.(*CouponDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_CouponList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).CouponList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_CouponList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).CouponList(ctx, req.(*CouponListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_SaveOrUpdateSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrUpdateSubjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SaveOrUpdateSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SaveOrUpdateSubject_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SaveOrUpdateSubject(ctx, req.(*SaveOrUpdateSubjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_SubjectDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubjectDeleteAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SubjectDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SubjectDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SubjectDelete(ctx, req.(*SubjectDeleteAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_SubjectList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubjectListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SubjectList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SubjectList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SubjectList(ctx, req.(*SubjectListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_SaveOrUpdateSubjectProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrUpdateSubjectProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SaveOrUpdateSubjectProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SaveOrUpdateSubjectProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SaveOrUpdateSubjectProduct(ctx, req.(*SaveOrUpdateSubjectProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_SubjectProductDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubjectProductDeleteAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SubjectProductDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SubjectProductDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SubjectProductDelete(ctx, req.(*SubjectProductDeleteAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sms_SubjectProductList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubjectProductListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SmsServer).SubjectProductList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Sms_SubjectProductList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SmsServer).SubjectProductList(ctx, req.(*SubjectProductListReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Sms_ServiceDesc is the grpc.ServiceDesc for Sms service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Sms_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "sms.Sms",
	HandlerType: (*SmsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveOrUpdateHomeAdvertise",
			Handler:    _Sms_SaveOrUpdateHomeAdvertise_Handler,
		},
		{
			MethodName: "HomeAdvertiseList",
			Handler:    _Sms_HomeAdvertiseList_Handler,
		},
		{
			MethodName: "HomeAdvertiseDelete",
			Handler:    _Sms_HomeAdvertiseDelete_Handler,
		},
		{
			MethodName: "SaveOrUpdateCoupon",
			Handler:    _Sms_SaveOrUpdateCoupon_Handler,
		},
		{
			MethodName: "CouponDelete",
			Handler:    _Sms_CouponDelete_Handler,
		},
		{
			MethodName: "CouponList",
			Handler:    _Sms_CouponList_Handler,
		},
		{
			MethodName: "SaveOrUpdateSubject",
			Handler:    _Sms_SaveOrUpdateSubject_Handler,
		},
		{
			MethodName: "SubjectDelete",
			Handler:    _Sms_SubjectDelete_Handler,
		},
		{
			MethodName: "SubjectList",
			Handler:    _Sms_SubjectList_Handler,
		},
		{
			MethodName: "SaveOrUpdateSubjectProduct",
			Handler:    _Sms_SaveOrUpdateSubjectProduct_Handler,
		},
		{
			MethodName: "SubjectProductDelete",
			Handler:    _Sms_SubjectProductDelete_Handler,
		},
		{
			MethodName: "SubjectProductList",
			Handler:    _Sms_SubjectProductList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sms.proto",
}
