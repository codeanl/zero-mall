// Code generated by goctl. DO NOT EDIT.
// Source: ums.proto

package umsclient

import (
	"context"

	"simple_mall_new/rpc/ums/ums"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MemberDeleteReq        = ums.MemberDeleteReq
	MemberDeleteResp       = ums.MemberDeleteResp
	MemberListData         = ums.MemberListData
	MemberListReq          = ums.MemberListReq
	MemberListResp         = ums.MemberListResp
	SaveOrUpdateMemberReq  = ums.SaveOrUpdateMemberReq
	SaveOrUpdateMemberResp = ums.SaveOrUpdateMemberResp

	Ums interface {
		// 添加｜｜更新会员
		SaveOrUpdateMember(ctx context.Context, in *SaveOrUpdateMemberReq, opts ...grpc.CallOption) (*SaveOrUpdateMemberResp, error)
		// 删除会员
		MemberDelete(ctx context.Context, in *MemberDeleteReq, opts ...grpc.CallOption) (*MemberDeleteResp, error)
		// 会员列表
		MemberList(ctx context.Context, in *MemberListReq, opts ...grpc.CallOption) (*MemberListResp, error)
	}

	defaultUms struct {
		cli zrpc.Client
	}
)

func NewUms(cli zrpc.Client) Ums {
	return &defaultUms{
		cli: cli,
	}
}

// 添加｜｜更新会员
func (m *defaultUms) SaveOrUpdateMember(ctx context.Context, in *SaveOrUpdateMemberReq, opts ...grpc.CallOption) (*SaveOrUpdateMemberResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.SaveOrUpdateMember(ctx, in, opts...)
}

// 删除会员
func (m *defaultUms) MemberDelete(ctx context.Context, in *MemberDeleteReq, opts ...grpc.CallOption) (*MemberDeleteResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberDelete(ctx, in, opts...)
}

// 会员列表
func (m *defaultUms) MemberList(ctx context.Context, in *MemberListReq, opts ...grpc.CallOption) (*MemberListResp, error) {
	client := ums.NewUmsClient(m.cli.Conn())
	return client.MemberList(ctx, in, opts...)
}
