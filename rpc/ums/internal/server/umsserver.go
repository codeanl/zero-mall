// Code generated by goctl. DO NOT EDIT.
// Source: ums.proto

package server

import (
	"context"

	"simple_mall_new/rpc/ums/internal/logic"
	"simple_mall_new/rpc/ums/internal/svc"
	"simple_mall_new/rpc/ums/ums"
)

type UmsServer struct {
	svcCtx *svc.ServiceContext
	ums.UnimplementedUmsServer
}

func NewUmsServer(svcCtx *svc.ServiceContext) *UmsServer {
	return &UmsServer{
		svcCtx: svcCtx,
	}
}

// 添加｜｜更新会员
func (s *UmsServer) SaveOrUpdateMember(ctx context.Context, in *ums.SaveOrUpdateMemberReq) (*ums.SaveOrUpdateMemberResp, error) {
	l := logic.NewSaveOrUpdateMemberLogic(ctx, s.svcCtx)
	return l.SaveOrUpdateMember(in)
}

// 删除会员
func (s *UmsServer) MemberDelete(ctx context.Context, in *ums.MemberDeleteReq) (*ums.MemberDeleteResp, error) {
	l := logic.NewMemberDeleteLogic(ctx, s.svcCtx)
	return l.MemberDelete(in)
}

// 会员列表
func (s *UmsServer) MemberList(ctx context.Context, in *ums.MemberListReq) (*ums.MemberListResp, error) {
	l := logic.NewMemberListLogic(ctx, s.svcCtx)
	return l.MemberList(in)
}
