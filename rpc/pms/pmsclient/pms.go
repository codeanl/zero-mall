// Code generated by goctl. DO NOT EDIT.
// Source: pms.proto

package pmsclient

import (
	"context"

	"simple_mall_new/rpc/pms/pms"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CategoryDeleteReq        = pms.CategoryDeleteReq
	CategoryDeleteResp       = pms.CategoryDeleteResp
	CategoryListData         = pms.CategoryListData
	CategoryListReq          = pms.CategoryListReq
	CategoryListResp         = pms.CategoryListResp
	SaveOrUpdateCategoryReq  = pms.SaveOrUpdateCategoryReq
	SaveOrUpdateCategoryResp = pms.SaveOrUpdateCategoryResp

	Pms interface {
		// 添加||更新分类
		SaveOrUpdateCategory(ctx context.Context, in *SaveOrUpdateCategoryReq, opts ...grpc.CallOption) (*SaveOrUpdateCategoryResp, error)
		// 分类列表
		CategoryList(ctx context.Context, in *CategoryListReq, opts ...grpc.CallOption) (*CategoryListResp, error)
		// 删除分类
		CategoryDelete(ctx context.Context, in *CategoryDeleteReq, opts ...grpc.CallOption) (*CategoryDeleteResp, error)
	}

	defaultPms struct {
		cli zrpc.Client
	}
)

func NewPms(cli zrpc.Client) Pms {
	return &defaultPms{
		cli: cli,
	}
}

// 添加||更新分类
func (m *defaultPms) SaveOrUpdateCategory(ctx context.Context, in *SaveOrUpdateCategoryReq, opts ...grpc.CallOption) (*SaveOrUpdateCategoryResp, error) {
	client := pms.NewPmsClient(m.cli.Conn())
	return client.SaveOrUpdateCategory(ctx, in, opts...)
}

// 分类列表
func (m *defaultPms) CategoryList(ctx context.Context, in *CategoryListReq, opts ...grpc.CallOption) (*CategoryListResp, error) {
	client := pms.NewPmsClient(m.cli.Conn())
	return client.CategoryList(ctx, in, opts...)
}

// 删除分类
func (m *defaultPms) CategoryDelete(ctx context.Context, in *CategoryDeleteReq, opts ...grpc.CallOption) (*CategoryDeleteResp, error) {
	client := pms.NewPmsClient(m.cli.Conn())
	return client.CategoryDelete(ctx, in, opts...)
}
